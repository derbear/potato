POTATO is (almost) a Scheme interpreter written in C for fun and learning in my spare time.

`make' to build
`make clean' to cleanup

`./potato' to run
`./potato [filename]' to execute a file

Horizon
 * second-level POTATO
 * debugger for second+ levels of POTATO
 * reflexive interpreter (second->first level)
 * garbage-collected bytecode interpreter
 * compiler for second level

Long-term
 * support for floating-point

Useful
 * better memory management
  * intern objects
 * better error handling
 * better error abstractions (error type, stack-unwind)
 * better layout of code
 * documentation
 * tests
 * errors print themselves?
